# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.

# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.2.2

      - name: Set up database schema
        run: bin/rails db:schema:load

      - name: Build application
        run: bundle exec rake assets:precompile

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_DB: {{ secrets.POSTGRES_TEST_DB }}
          POSTGRES_USER: {{ secrets.POSTGRES_TEST_USER }}
          POSTGRES_PASSWORD: {{ secrets.POSTGRES_TEST_PASSWORD }}
        ports:
          - "5432:5432"

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://{{ secrets.POSTGRES_TEST_USER }}:{{ secrets.POSTGRES_TEST_PASSWORD }}@localhost:5432/{{ secrets.POSTGRES_TEST_DB }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.2.2

      - name: Build application
        run: bundle exec rake assets:precompile

      - name: Run tests
        run: bin/rake

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.2.2

      - name: Security audit dependencies
        run: bundle exec bundler-audit --update

      - name: Security audit application code
        run: bundle exec brakeman -q -w2

      - name: Lint Ruby files
        run: bundle exec rubocop --auto-correct --disable-uncorrectable
